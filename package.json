{
  "name": "obebs4",
  "version": "0.8.58",
  "faversion": "5.13.1",
  "description": "The OBE:BS4 Design System is a self-reflexive reference library design system based on the most popular web framework in the world, Bootstrap! The OBE:BS4 system was built specifically to give all project stakeholders full visual, technical, and tactile access to every color, font, element, component and layout for any web project.",
  "main": "index.js",
  "author": "Matt McT",
  "license": "ISC",
  "dependencies": {
    "autoprefixer": "^9.4.2",
    "bootstrap": "^4.5.0",
    "datatables.net": "^1.11.3",
    "datatables.net-bs4": "^1.10.19",
    "del": "^5.1.0",
    "gulp": "^4.0.2",
    "gulp-clean-css": "^4.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-data": "^1.3.1",
    "gulp-html-beautify": "^1.0.1",
    "gulp-json-to-sass": "0.0.4",
    "gulp-nunjucks-render": "^2.2.2",
    "gulp-postcss": "^8.0.0",
    "gulp-sass": "^4.0.2",
    "gulp-sourcemaps": "^2.6.4",
    "gulp-terser": "^1.1.6",
    "jquery": "^3.5.1",
    "popper.js": "^1.16.0",
    "prismjs": "^1.25.0",
    "tinycolor2": "^1.4.1"
  },
  "devDependencies": {
    "browserslist": "^4.16.5",
    "caniuse-lite": "^1.0.30001020",
    "fstream": "^1.0.12",
    "js-yaml": "^3.13.1",
    "lodash": "^4.17.21",
    "lodash.mergewith": "^4.6.2",
    "lodash.template": "^4.5.0",
    "minimist": "^1.2.5",
    "mixin-deep": "^2.0.1",
    "set-value": "^4.0.1",
    "tar": "^6.1.9"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "obebs4": "node ./node_modules/gulp/bin/gulp.js obebs4",
    "obebs4_no_ingest": "node ./node_modules/gulp/bin/gulp.js obebs4_no_ingest",
    "ingest_obebs4_settings": "node ./node_modules/gulp/bin/gulp.js ingest_obebs4_settings",
    "compile_sass": "node ./node_modules/gulp/bin/gulp.js compile_sass",
    "move_images": "node ./node_modules/gulp/bin/gulp.js move_images",
    "move_favicons": "node ./node_modules/gulp/bin/gulp.js move_favicons",
    "compile_nunjucks": "node ./node_modules/gulp/bin/gulp.js compile_nunjucks",
    "concat_library_js": "node ./node_modules/gulp/bin/gulp.js concat_library_js",
    "concat_production_js": "node ./node_modules/gulp/bin/gulp.js concat_production_js",
    "concat_wds_js": "node ./node_modules/gulp/bin/gulp.js concat_wds_js",
    "concat_plugins_js": "node ./node_modules/gulp/bin/gulp.js concat_plugins_js",
    "copy_prism_js": "node ./node_modules/gulp/bin/gulp.js copy_prism_js",
    "copy_datatables_js": "node ./node_modules/gulp/bin/gulp.js copy_datatables_js",
    "copy_tinycolor_js": "node ./node_modules/gulp/bin/gulp.js copy_tinycolor_js",
    "concat_css": "node ./node_modules/gulp/bin/gulp.js concat_css",
    "concat_production_css": "node ./node_modules/gulp/bin/gulp.js concat_production_css",
    "concat_wds_css": "node ./node_modules/gulp/bin/gulp.js concat_wds_css",
    "concat_plugins_css": "node ./node_modules/gulp/bin/gulp.js concat_plugins_css",
    "copy_prism_css": "node ./node_modules/gulp/bin/gulp.js copy_prism_css",
    "copy_datatables_css": "node ./node_modules/gulp/bin/gulp.js copy_datatables_css",
    "clean_up": "node ./node_modules/gulp/bin/gulp.js clean_up",
    "create-library-directory": "node --eval \"if (!fs.existsSync('./library')){fs.mkdirSync('./node_modules/obebs4-design-system/library')}\"",
    "create-library-css-directory": "node --eval \"if (!fs.existsSync('./library/css')){fs.mkdirSync('./node_modules/obebs4-design-system/library/css')}\"",
    "create-library-js-directory": "node --eval \"if (!fs.existsSync('./library/js')){fs.mkdirSync('./node_modules/obebs4-design-system/library/js')}\"",
    "create-library-images-directory": "node --eval \"if (!fs.existsSync('./library/images')){fs.mkdirSync('./node_modules/obebs4-design-system/library/images')}\"",
    "create-nunjucks-directory": "node --eval \"if (!fs.existsSync('./nunjucks')){fs.mkdirSync('./node_modules/obebs4-design-system/nunjucks')}\"",
    "create-obebs4-directories": "npm run create-library-directory && npm run create-library-css-directory && npm run create-library-js-directory && npm run create-library-images-directory && npm run create-nunjucks-directory",
    "say-hello": "echo 'Hello World'",
    "awesome-npm": "npm run say-hello && echo 'echo NPM is awesome!'",
    "eval-test": "node --eval 'console.log(3+3)'",
    "create-test-directory": "node --eval \"if (!fs.existsSync('./test-directory')){fs.mkdirSync('.//test-directory')}\"",
    "copy-index-html": "node --eval \"fs.createReadStream('./library/index.html').pipe(fs.createWriteStream('./test-directory/index.html'))\"",
    "create-and-copy-test": "npm run create-test-directory && npm run copy-index-html"
  }
}
